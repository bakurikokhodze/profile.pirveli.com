import Head from 'next/head';
import Image from 'next/image';
// @ts-ignore
import {ICONS, IMAGES} from "public/images";
import Layout from "../../components/layouts/profile-layout";
// @ts-ignore
import {userBgIcon} from "/public/images/icons";
// @ts-ignore
import Cards from "/public/images/icons/nav/navCards";
// @ts-ignore
import Points from "/public/images/icons/nav/navPoints";
// @ts-ignore// @ts-ignore
import React, {useState} from "react";
import TicketItem from "../../components/blocks/ticket-item";
import {DatePicker, Form, Input, Modal, Rate, Select} from "antd";
import Button from "../../components/UI/button";
import dayjs from 'dayjs';

import weekday from "dayjs/plugin/weekday"
import localeData from "dayjs/plugin/localeData"

dayjs.extend(weekday)
dayjs.extend(localeData)

export default function Profile() {
  const [profileForm] = Form.useForm();
  const [codeForm] = Form.useForm();
  const {Option} = Select;
  const dateFormat = 'YYYY-MM-DD';
  const [isDisabledEmail, setIsDisabledEmail] = useState<boolean>(true);
  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);
  const [error, setError] = useState<boolean>(false);

  const onFinish = (fieldsValue: any) => {
    const values = {
      ...fieldsValue,
      'birth_date': fieldsValue['birth_date'].format('YYYY-MM-DD'),
    };

    console.log("values", values)

  };

  const onFinishCode = (values) => {
    console.log("codeval", values)
  }


  const openCodeModal = () => {
    setIsModalOpen(true)
  }
  const handleCancel = () => {
    setIsModalOpen(false)
  }

  return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/public/favicon.ico"/>
        </Head>
        <Modal
            className={"codeModel"}
            open={isModalOpen}
            onCancel={handleCancel}
            footer={""}
            title={""}
            width={487}>
          <p className={"text-[24px] text-dark font-bold"}>ელ-ფოსტის შეცვლა</p>
          <div className={"p-[25px] mt-[42px] pt-0 pb-0"}>
            <p className={"text-dark6 text-[14px]"}>ერთჯერადი კოდი გამოგზავნილია
              მითითებულ მეილზე , გთხოვთ გადაამოწმოთ.</p>
            <Form
                className={"w-full col-span-2 point-filter"}
                form={codeForm}
                layout="vertical"
                onFinish={onFinishCode}
            >
              <div className={"flex flex-col w-full point-filter mt-[21px]"}>
                <Form.Item label="ერთჯერადი კოდი" name={"code"}
                           rules={[
                             {
                               required: true,
                               message: "ველი სავალდებულოა"
                             }
                           ]}
                >
                  <Input
                      type={"number"}
                      placeholder="შეიყვანე ერთჯერადი კოდი"/>
                </Form.Item>
                {error && <p className={"text-red"}>კოდი არასწორია,სცადეთ თავიდან</p>}

                <button type={"submit"}
                        className={"bg-red px-[32px] h-[48px] w-min self-end mt-[6px] rounded-xl cursor-pointer"}>
                  <p className={"text-[white]"}>შეინახე</p>
                </button>

              </div>
            </Form>

          </div>

        </Modal>

        <div className={"w-full"}>

          <h2 className={"text-[32px] text-[#383838] font-bold"}>
            პერსონალური ინფორმაცია
          </h2>

          <div className={"gap-x-[30px] grid grid-cols-3 h-[2000px] mt-[40px]"}>
            <div className={""}>
              <div className={"bg-red rounded-xl"}>
                <img src={IMAGES.bigAvatar.src} alt={""}/>
              </div>
              <p className={"text-dark6 mt-[14px] text-[14px]"}>ავატარის შესაცვლელად დააკლიკე ფოტოს</p>
            </div>

            <Form
                className={"w-full col-span-2 point-filter profileInputs"}
                form={profileForm}
                layout="vertical"
                initialValues={{
                  name: "სახელი",
                  email: "b_kokhodze2@cu.edu.ge",
                  birth_date: dayjs('2015-01-01', dateFormat),
                  city: "kutaisi",
                  id_number: "543",
                  last_name: "სახელი",
                  phone: "სახელი",
                  gender: "male",
                  address: "სახელი",
                }}
                onFinish={onFinish}
            >
              <div className={"grid grid-cols-2 gap-x-[30px] "}>
                <div className={"space-y-[30px]"}>
                  <Form.Item label="სახელი" name={"name"}
                             rules={[
                               {
                                 required: true,
                                 message: "ველი სავალდებულოა"
                               }
                             ]}
                  >
                    <Input
                        placeholder="სახელი"/>
                  </Form.Item>

                  {
                    isDisabledEmail ? <div className={"w-full"} onClick={() => openCodeModal()}>
                      <p className={"text-[#38383899] text-[14px] mb-1"}>ელ.ფოსტა</p>
                      <div
                          className={"bg-[white] w-full rounded-xl flex items-center pl-6 h-[48px]"}>
                        d
                      </div>
                    </div> : <Form.Item
                        label="ელ.ფოსტა"
                        name={"email"}
                        rules={[
                          {
                            type: 'email',
                            message: 'ემაილი არ არის ვალიდური'
                          },
                          {
                            required: true,
                            message: "ველი სავალდებულოა"
                          }
                        ]}
                    >
                      <Input
                          placeholder="ელ.ფოსტა"/>
                    </Form.Item>
                  }


                  <Form.Item label="დაბადების თარიღი" name={"birth_date"} rules={[
                    {
                      required: true,
                      message: "ველი სავალდებულოა"
                    }
                  ]}>

                    <DatePicker
                        // defaultValue={dayjs('2015-01-01', dateFormat)}
                        format={dateFormat}
                        placeholder={"დაბადების თარიღი"}/>

                  </Form.Item>

                  <Form.Item
                      name="city"
                      label="ქალაქი"
                      rules={[
                        {
                          required: true,
                          message: "ველი სავალდებულოა"
                        }
                      ]}
                  >
                    <Select placeholder="ქალაქი">
                      <Option value="tbilisi">tbilisi</Option>
                      <Option value="kutaisi">kutaisi</Option>
                      <Option value="batumi">batumi</Option>
                    </Select>
                  </Form.Item>

                  <Form.Item label="პირადი ნომერი" name={"id_number"}
                             rules={[
                               {
                                 required: true,
                                 message: "ველი სავალდებულოა"
                               }
                             ]}>
                    <Input
                        disabled={true}
                        placeholder="პირადი ნომერი"/>
                  </Form.Item>

                </div>
                <div className={"space-y-[30px]"}>
                  <Form.Item label="გვარი" name={"last_name"}
                             rules={[
                               {
                                 required: true,
                                 message: "ველი სავალდებულოა"
                               }
                             ]}>
                    <Input placeholder="გვარი"/>
                  </Form.Item>
                  <Form.Item label="ტელეფონის ნომერი" name={"phone"}
                             rules={[
                               {
                                 required: true,
                                 message: "ველი სავალდებულოა"
                               }
                             ]}>
                    <Input
                        placeholder="ტელეფონის ნომერი"/>
                  </Form.Item>

                  <Form.Item
                      name="gender"
                      label="სქესი"
                      rules={[
                        {
                          required: true,
                          message: "ველი სავალდებულოა"
                        }
                      ]}
                  >
                    <Select placeholder="სქესი">
                      <Option value="male">Male</Option>
                      <Option value="female">Female</Option>
                      <Option value="other">Other</Option>
                    </Select>
                  </Form.Item>

                  <Form.Item label="მისამართი" name={"address"}
                             rules={[
                               {
                                 required: true,
                                 message: "ველი სავალდებულოა"
                               }
                             ]}>
                    <Input
                        placeholder="მისამართი"/>
                  </Form.Item>

                </div>
              </div>

              <div className={"flex justify-between items-center mt-[30px]"}>
                <p className={"text-[14px] text-red cursor-pointer"}>პაროლის შეცვლა</p>

                <button type={"submit"} className={"bg-red px-[32px] h-[48px] rounded-xl cursor-pointer"}>
                  <p className={"text-[white]"}>შეინახე</p>
                </button>

                {/*<Button text={"შეინახე"} bgColor={"#DB0060"}/>*/}
              </div>

            </Form>

          </div>

        </div>

      </>
  )
}

Profile.getLayout = function getLayout(page: any) {
  return (
      <Layout>
        {page}
      </Layout>
  )
}