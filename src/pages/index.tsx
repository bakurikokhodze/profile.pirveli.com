import Head from 'next/head';
import Image from 'next/image';
// @ts-ignore
import {ICONS, IMAGES} from "public/images";
import Donut from "../components/charts/donut";
import Layout from "../components/layouts/profile-layout";

// @ts-ignore
import Cards from "/public/images/icons/nav/navCards";
// @ts-ignore
import Points from "/public/images/icons/nav/navPoints";
import CountUp from 'react-countup';
// @ts-ignore
import Tickets from "/public/images/icons/nav/navTickets";
import Slider from "../components/UI/slider/tickets";
import {Form, Input, Modal, Table} from "antd";
import React, {useEffect, useState} from "react";
import {ColumnsType} from "antd/es/table";
import Transaction from "../../public/images/icons/nav/transaction";
import ChangeAvatar from "../components/UI/modal/ChangeAvatar"
import LeaderBoard from "../components/blocks/leaderboaord";
import {useSelector} from "react-redux";
import TransactionsTable from "../components/blocks/transactions-table";
import Link from "next/link";
import Lari from "../../public/images/icons/lari";

interface DataType {
  key: string;
  name: string;
  platform: string;
  date: string;
  points: string;
}

// @ts-ignore
const columns: ColumnsType<DataType> = [
  {
    title: () => {
      return <p className={"text-dark text-[14px] font-[400]"}>ტრანზაქციის სახელი</p>
    },
    width: 200,
    dataIndex: 'name',
    key: 'name',
    render: (text) => <a>{text}</a>,
  },
  {
    title: () => {
      return <p className={"text-dark text-[14px] font-[400]"}>თარიღი</p>
    },
    dataIndex: 'date',
    key: 'date',
  },
  {
    title: () => {
      return <p className={"text-dark text-[14px] font-[400]"}>პლატფორმა</p>
    },
    dataIndex: 'platform',
    key: 'platform',
  },
  {
    title: () => {
      return <p className={"text-dark text-[14px] font-[500]"}>ქულები</p>
    },
    // @ts-ignore
    align: "end",
    dataIndex: 'points',
    key: 'points',
  }
];

const data: DataType[] = [
  {
    key: '1',
    name: 'John Brown',
    platform: 'platform1',
    date: "01.02.2022 ",
    points: '123',
  },
  {
    key: '2',
    name: 'Jim Green',
    platform: 'platform2',
    date: "01.02.2022 ",
    points: '-5678',
  },
  {
    key: '3',
    name: 'Joe Black',
    platform: 'platform3',
    date: "01.02.2022 ",
    points: '923',
  },
];

export default function Profile() {
  const [isOpenChooseModal, setIsOpenChooseModal] = useState<boolean>(false);
  const [currentPoints, setCurrentPoints] = useState(0);
  const [spentPoints, setSpentPoints] = useState(0);
  const userInfo = useSelector((state: any) => state.user.userInfo);

  useEffect(() => {
    setCurrentPoints(userInfo?.accountDetail?.amountOfPoint?.amountOfPoints)
    setSpentPoints(userInfo?.accountDetail?.amountOfSpentPoints?.amountOfSpentPoints)
  }, [userInfo])

  const getChosenAvatar = () => {


    switch (parseInt(userInfo?.avatar?.path)) {
      case 1:
        return IMAGES.avatar1.src
      case 2:
        return IMAGES.avatar2.src
      case 3:
        return IMAGES.avatar3.src
      case 4:
        return IMAGES.avatar4.src
      case 5:
        return IMAGES.avatar5.src
      case 6:
        return IMAGES.avatar6.src
      default :
        return IMAGES.avatar1.src

    }

  }


  return (
      <div>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/public/favicon.ico"/>
        </Head>

        <ChangeAvatar setIsOpenChooseModal={setIsOpenChooseModal} isOpenChooseModal={isOpenChooseModal}/>

        <div className={"grid grid-cols-2 gap-[30px] pb-[30px]"}>
          <div className={"bg-[white] flex items-center rounded-xl p-[30px] relative"}>
            <div
                onClick={() => setIsOpenChooseModal(true)}
                className={"group w-[88px] h-[88px] mr-4 relative flex  items-center justify-center rounded-[50%] py-[5px] cursor-pointer"}
                style={{
                  transition: "0.5s",
                  backgroundColor: "#" + userInfo?.avatar?.code
                }}>

              <div
                  className={"absolute bottom-0 top-0 left-0 right-0 rounded-[50%] bg-transparent group-hover:bg-[#3838387F] flex items-center justify-center"}
                  style={{
                    transition: "0.5s"
                  }}
              >
                <div
                    className={"opacity-0 rotate-90 group-hover:rotate-0 scale-75 group-hover:scale-125 group-hover:opacity-100"}
                    style={{
                      transition: "0.3s"
                    }}
                >
                  <Image src={ICONS.change} alt={"change icon"}/>
                </div>
              </div>
              <Image src={getChosenAvatar()} quality={100} alt={"avatar"}
                     width={88} height={88}
                     style={{objectFit: "cover", height: "100%", width: "auto"}}/>
            </div>

            <p className={"text-dar text-[18px] font-bold"}>{userInfo?.details?.firstName} {userInfo?.details?.lastName}</p>
            <div className={"absolute right-6 bottom-0"}>
              <Image src={ICONS.userBgIcon} alt={"background"}/>
            </div>
            <Link href={"/profile-edit"}>
              <div className={"absolute right-6 top-6 cursor-pointer"}>
                <Image src={ICONS.edit} alt={"edit icon"}/>
              </div>
            </Link>

          </div>
          <div
              className={"bg-[white] rounded-xl p-[30px] pb-[22px] pt-[24px] pr-[24px] flex justify-between items-start relative"}>
            <div className={"flex h-full"}>
              <div className={"h-full"}>
                <p className={"text-base text-dark font-bold"}>ბალანსი</p>
                <p className={"text-[24px] text-dark mb-[17px] flex items-center"}>
                  <CountUp duration={1}
                           end={userInfo?.accountDetail?.amountOfGel?.amountOfGel}
                           separator=","
                      // decimals={4}
                           decimal="," start={userInfo?.accountDetail?.amountOfGel?.amountOfGel * 0.85}/>
                  <Lari classes={"ml-[2px]"} color={"#383838"} width={18} height={20}/>
                </p>
                <span className={"text-[14px] text-[#9766F0] cursor-pointer"}>+ ბალანსის შევსება</span>
              </div>
              <div>
                <p className={"text-base text-dark font-bold"}>ID</p>
                <p className={"text-dark7 text-base"}>{userInfo?.details?.id}</p>
              </div>
            </div>

            <div className={"absolute right-0 bottom-0"}>
              <Image src={ICONS.balance} alt={"background"}/>
            </div>

            <div className={"rounded-[50%] flex justify-center items-center bg-[#F5CE5A] w-[44px] h-[44px]"}>
              <Cards color={"#FFFFFF"}/>
            </div>

          </div>
          <div className={"bg-[white] pt-[24px] rounded-xl pr-[24px] pl-[30px] pb-[30px] relative"}>
            <div className={"flex justify-between items-center"}>
              <p className={"text-base text-dark font-bold"}>ქულები</p>
              <div className={"rounded-[50%] flex justify-center items-center bg-red w-[44px] h-[44px]"}>
                <Points color={"#FFFFFF"}/>
              </div>
            </div>
            <div className={"mt-4 flex space-x-[25px]"}>
              <div className={"w-[117px] h-[117px] "}>
                <Donut/>
              </div>
              <div className={"flex flex-col justify-around"}>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-red rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>გამომუშავებული</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={currentPoints + spentPoints}
                                                                       separator=","
                                                                       start={(currentPoints + spentPoints) * 0.75}/>
                  </p>
                </div>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-[#9766F0] rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>მიმდინარე</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={currentPoints} separator=","
                                                                       start={currentPoints * 0.75}/>
                  </p>
                </div>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-[#EDC520] rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>დახარჯული</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={spentPoints} separator=","
                                                                       start={spentPoints * 0.75}/></p>
                </div>
              </div>
            </div>
            <div className={"absolute right-0 bottom-0"}>
              <Image src={ICONS.pointsBg} alt={"background"}/>
            </div>
          </div>
          <div className={"flex flex-col bg-[white] pt-[24px] rounded-xl relative"}>
            <div className={"flex justify-between items-center pr-[24px] pl-[30px]"}>
              <p className={"text-base text-dark font-bold"}>ლოტოს ბილეთები</p>
              <div className={"rounded-[50%] flex justify-center items-center bg-[#9766F0] w-[44px] h-[44px]"}>
                <Tickets color={"#FFFFFF"}/>
              </div>
            </div>

            <div className={"absolute right-0 bottom-0"}>
              <Image src={ICONS.ticketsBg} alt={"background"}/>
            </div>

            <div className={"h-full flex-1"}>
              <Slider/>
            </div>
          </div>


          <div className={"col-span-2 py-[30px]  bg-[white] rounded-xl px-[30px]"}>
            <LeaderBoard/>
          </div>

          <div className={"removeHeaderBg col-span-2 pt-[30px] bg-[white] rounded-xl px-[30px]"}>

            <div className={"flex justify-between items-center pb-[px] mb-[19px]"}>
              <p className={"text-base text-dark font-bold"}>ქულების ტრანზაქციები</p>
              <div className={"rounded-[50%] flex justify-center items-center bg-[#5DB039] w-[44px] h-[44px]"}>
                <Transaction color={"#FFFFFF"}/>
              </div>
            </div>

            <TransactionsTable/>

          </div>


        </div>

      </div>
  )
}

Profile.getLayout = function getLayout(page: any) {
  return (
      <Layout>
        {page}
      </Layout>
  )
}