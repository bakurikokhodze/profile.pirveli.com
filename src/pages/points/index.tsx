import Head from 'next/head';
import Image from 'next/image';
// @ts-ignore
import {ICONS, IMAGES} from "public/images";
import Layout from "../../components/layouts/profile-layout";
// @ts-ignore
import {userBgIcon} from "/public/images/icons";
// @ts-ignore
import Cards from "/public/images/icons/nav/navCards";
// @ts-ignore
import Points from "/public/images/icons/nav/navPoints";
// @ts-ignore// @ts-ignore
import React from "react";
import {DatePicker, Form, Space, Table, Tag} from 'antd';
import type {ColumnsType} from 'antd/es/table';
import CountUp from "react-countup";
import Donut from '../../components/charts/donut';
import dayjs from 'dayjs';
import {Select} from 'antd';
import type {SelectProps} from 'antd';

interface DataType {
  key: string;
  name: string;
  age: number;
  address: string;
  tags: string[];
}

const dateFormat = 'YYYY/MM/DD';

export default function PointsPage() {
  const {RangePicker} = DatePicker;
  const [form] = Form.useForm();
  const columns: ColumnsType<DataType> = [
    {
      title: () => {
        return <p className={"text-dark text-[14px] font-[500]"}>ტრანზაქციის სახელი</p>
      },
      dataIndex: 'name',
      key: 'name',
      render: (text) => <a>{text}</a>,
    },
    {
      title: () => {
        return <p className={"text-dark text-[14px] font-[500]"}>თარიღი</p>
      },
      dataIndex: 'age',
      key: 'age',
    },
    {
      title: () => {
        return <p className={"text-dark text-[14px] font-[500]"}>პლატფორმა</p>
      },
      dataIndex: 'address',
      key: 'address',
    },
    {
      title: () => {
        return <p className={"text-dark text-[14px] font-[500]"}>ქულები</p>
      },
      dataIndex: 'address',
      key: 'address',
    }
  ];

  const data: DataType[] = [
    {
      key: '1',
      name: 'John Brown',
      age: 32,
      address: 'New York No. 1 Lake Park',
      tags: ['nice', 'developer'],
    },
    {
      key: '2',
      name: 'Jim Green',
      age: 42,
      address: 'London No. 1 Lake Park',
      tags: ['loser'],
    },
    {
      key: '3',
      name: 'Joe Black',
      age: 32,
      address: 'Sidney No. 1 Lake Park',
      tags: ['cool', 'teacher'],
    },
  ];

  const options: SelectProps['options'] = [];

  for (let i = 10; i < 36; i++) {
    options.push({
      value: i.toString(36) + i,
      label: i.toString(36) + i,
    });
  }

  const handleChange = (value: string) => {
    console.log(`selected ${value}`);
  };

  const onChange = (value: string) => {
    console.log(`selected ${value}`);
  };

  const onSearch = (value: string) => {
    console.log('search:', value);
  };

  const onFinish = (values: any) => {
    console.log('Received values of form: ', values);
  };
  const onOk = (values: any) => {
    console.log('Received values of form: ', values);
  };


  return (
      <div>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/public/favicon.ico"/>
        </Head>

        <div className={"w-full"}>

          <div className={"flex justify-between"}>
            <h2 className={"text-[32px] text-[#383838] font-bold"}>
              ჩემი ქულები
            </h2>
          </div>

          <div className={"h-[1000px] mt-[30px] px-6 pt-[36px] pb-[46px] bg-[white] rounded-xl"}>

            {/*/statistic*/}
            <div className={"mt-4 flex space-x-[25px] mb-[44px]"}>
              <div className={"w-[117px] h-[117px] "}>
                <Donut/>
              </div>
              <div className={"flex flex-col justify-around"}>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-red rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>გამომუშავებული</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={19670} separator=","
                                                                       start={19670 * 0.75}/>
                  </p>
                </div>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-[#9766F0] rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>მიმდინარე</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={17445} separator=","
                                                                       start={17445 * 0.75}/>
                  </p>
                </div>
                <div className={"flex items-center"}>
                  <div className={"w-[10px] h-[10px] bg-[#EDC520] rounded-[50%]"}/>
                  <p className={"text-dark7 text-[12px] ml-[6px]"}>დახარჯული</p>
                  <p className={"text-dark ml-3 text-[18px]"}><CountUp duration={1} end={2225} separator=","
                                                                       start={2225 * 0.75}/></p>
                </div>
              </div>
            </div>
            {/*/statistic*/}
            {/*<Form*/}
            {/*    form={form}*/}
            {/*    name="register"*/}
            {/*    className={"grid grid-cols-4 gap-x-6 mt-[44px] mb-[50px] point-filter"}*/}
            {/*    onFinish={onFinish}*/}
            {/*    onValuesChange={() => form.submit()}*/}
            {/*    initialValues={{}}*/}
            {/*>*/}
            {/*  <div>*/}
            {/*    <Form.Item*/}
            {/*        name="platforma">*/}
            {/*      <Select*/}
            {/*          mode="tags"*/}
            {/*          style={{width: '100%'}}*/}
            {/*          placeholder="პლატფორმა"*/}
            {/*          onChange={handleChange}*/}
            {/*          options={options}*/}
            {/*      />*/}
            {/*    </Form.Item>*/}
            {/*  </div>*/}
            {/*  <div>*/}
            {/*    <Form.Item*/}
            {/*        name="date">*/}
            {/*      <RangePicker*/}
            {/*          // defaultValue={[dayjs('2015/01/01', dateFormat), dayjs('2015/01/01', dateFormat)]}*/}
            {/*          placeholder={["დასაწყისი", "დასასრული"]}*/}
            {/*          format={dateFormat}*/}
            {/*          onOk={onOk}*/}

            {/*      />*/}
            {/*    </Form.Item>*/}
            {/*  </div>*/}
            {/*  <div>*/}
            {/*    <Form.Item*/}
            {/*        name="points">*/}
            {/*      <Select*/}
            {/*          showSearch*/}
            {/*          style={{*/}
            {/*            width: "100%"*/}
            {/*          }}*/}
            {/*          placeholder="დაგროვებული ქულები"*/}
            {/*          optionFilterProp="children"*/}
            {/*          onChange={onChange}*/}
            {/*          onSearch={onSearch}*/}
            {/*          filterOption={(input, option) =>*/}
            {/*              (option?.label ?? '').toLowerCase().includes(input.toLowerCase())*/}
            {/*          }*/}
            {/*          options={[*/}
            {/*            {*/}
            {/*              value: 'jack',*/}
            {/*              label: 'Jack',*/}
            {/*            },*/}
            {/*            {*/}
            {/*              value: 'lucy',*/}
            {/*              label: 'Lucy',*/}
            {/*            },*/}
            {/*            {*/}
            {/*              value: 'tom',*/}
            {/*              label: 'Tom',*/}
            {/*            },*/}
            {/*          ]}*/}
            {/*      />*/}
            {/*    </Form.Item>*/}
            {/*  </div>*/}
            {/*  <div className={"pl-[30px]"}>*/}
            {/*    <Form.Item*/}
            {/*        name="sort">*/}
            {/*      <Select*/}
            {/*          showSearch*/}
            {/*          style={{*/}
            {/*            width: "100%"*/}
            {/*          }}*/}
            {/*          placeholder="სორტირება"*/}
            {/*          optionFilterProp="children"*/}
            {/*          onChange={onChange}*/}
            {/*          onSearch={onSearch}*/}
            {/*          filterOption={(input, option) =>*/}
            {/*              (option?.label ?? '').toLowerCase().includes(input.toLowerCase())*/}
            {/*          }*/}
            {/*          options={[*/}
            {/*            {*/}
            {/*              value: 'jack',*/}
            {/*              label: 'Jack',*/}
            {/*            },*/}
            {/*            {*/}
            {/*              value: 'lucy',*/}
            {/*              label: 'Lucy',*/}
            {/*            },*/}
            {/*            {*/}
            {/*              value: 'tom',*/}
            {/*              label: 'Tom',*/}
            {/*            },*/}
            {/*          ]}*/}
            {/*      />*/}
            {/*    </Form.Item>*/}
            {/*  </div>*/}
            {/*</Form>*/}

            <Table
                className={"pointsTable"}
                columns={columns}
                dataSource={data}
                pagination={false}
            />
          </div>

        </div>

      </div>
  )
}

PointsPage.getLayout = function getLayout(page: any) {
  return (
      <Layout>
        {page}
      </Layout>
  )
}